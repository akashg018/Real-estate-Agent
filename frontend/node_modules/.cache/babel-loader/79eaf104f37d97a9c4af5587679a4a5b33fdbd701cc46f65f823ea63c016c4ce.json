{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Real Estate Agent\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport { Container, CssBaseline } from '@mui/material';\nimport ChatInterface from './components/ChatInterface';\nimport Header from './components/Header';\nimport ResponseDisplay from './components/ResponseDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#2196f3'\n    },\n    secondary: {\n      main: '#f50057'\n    },\n    background: {\n      default: '#f5f5f5'\n    }\n  },\n  typography: {\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif'\n  }\n});\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentResponse, setCurrentResponse] = useState(null);\n  const extractAgentMessages = (agent, fullMessage) => {\n    const steps = [];\n    if (typeof fullMessage === 'string') {\n      steps.push(fullMessage);\n    } else if (typeof fullMessage === 'object') {\n      var _fullMessage$initial_, _fullMessage$analysis, _fullMessage$final_re;\n      if ((_fullMessage$initial_ = fullMessage.initial_search) !== null && _fullMessage$initial_ !== void 0 && _fullMessage$initial_.message) {\n        steps.push(fullMessage.initial_search.message);\n      }\n      if ((_fullMessage$analysis = fullMessage.analysis) !== null && _fullMessage$analysis !== void 0 && _fullMessage$analysis.message) {\n        steps.push(fullMessage.analysis.message);\n      }\n      if ((_fullMessage$final_re = fullMessage.final_recommendations) !== null && _fullMessage$final_re !== void 0 && _fullMessage$final_re.message) {\n        steps.push(fullMessage.final_recommendations.message);\n      }\n    }\n    if (steps.length === 0) {\n      steps.push(JSON.stringify(fullMessage, null, 2)); // fallback\n    }\n    return steps;\n  };\n  const handleSendMessage = async message => {\n    setLoading(true);\n    setMessages(prev => [...prev, {\n      type: 'user',\n      content: message\n    }]);\n    try {\n      const response = await fetch('/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      });\n      const data = await response.json();\n      setCurrentResponse(data);\n      if (data.conversation && Array.isArray(data.conversation)) {\n        for (const msg of data.conversation) {\n          const displaySteps = extractAgentMessages(msg.agent, msg.message);\n          for (const content of displaySteps) {\n            setMessages(prev => [...prev, {\n              type: 'agent',\n              agent: msg.agent,\n              content,\n              emoji: msg.emoji,\n              messageType: msg.type\n            }]);\n            await new Promise(resolve => setTimeout(resolve, 800));\n          }\n        }\n      } else {\n        setMessages(prev => [...prev, {\n          type: 'agent',\n          agent: 'Sarah',\n          content: 'Sorry, I encountered an error. Please try again.',\n          emoji: 'üë±‚Äç‚ôÄÔ∏è',\n          messageType: 'error'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        type: 'agent',\n        agent: 'Sarah',\n        content: 'Sorry, I encountered an error. Please try again.',\n        emoji: 'üë±‚Äç‚ôÄÔ∏è',\n        messageType: 'error'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      sx: {\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        py: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ResponseDisplay, {\n        response: currentResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatInterface, {\n        messages: messages,\n        onSendMessage: handleSendMessage,\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xrx47swNXivdXqQEmYhY6ntdJMs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ThemeProvider","createTheme","Container","CssBaseline","ChatInterface","Header","ResponseDisplay","jsxDEV","_jsxDEV","theme","palette","primary","main","secondary","background","default","typography","fontFamily","App","_s","messages","setMessages","loading","setLoading","currentResponse","setCurrentResponse","extractAgentMessages","agent","fullMessage","steps","push","_fullMessage$initial_","_fullMessage$analysis","_fullMessage$final_re","initial_search","message","analysis","final_recommendations","length","JSON","stringify","handleSendMessage","prev","type","content","response","fetch","method","headers","body","data","json","conversation","Array","isArray","msg","displaySteps","emoji","messageType","Promise","resolve","setTimeout","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","height","display","flexDirection","py","onSendMessage","_c","$RefreshReg$"],"sources":["D:/Projects/Real Estate Agent/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { Container, CssBaseline } from '@mui/material';\r\nimport ChatInterface from './components/ChatInterface';\r\nimport Header from './components/Header';\r\nimport ResponseDisplay from './components/ResponseDisplay';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: { main: '#2196f3' },\r\n    secondary: { main: '#f50057' },\r\n    background: { default: '#f5f5f5' },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [currentResponse, setCurrentResponse] = useState(null);\r\n\r\n  const extractAgentMessages = (agent, fullMessage) => {\r\n    const steps = [];\r\n\r\n    if (typeof fullMessage === 'string') {\r\n      steps.push(fullMessage);\r\n    } else if (typeof fullMessage === 'object') {\r\n      if (fullMessage.initial_search?.message) {\r\n        steps.push(fullMessage.initial_search.message);\r\n      }\r\n      if (fullMessage.analysis?.message) {\r\n        steps.push(fullMessage.analysis.message);\r\n      }\r\n      if (fullMessage.final_recommendations?.message) {\r\n        steps.push(fullMessage.final_recommendations.message);\r\n      }\r\n    }\r\n\r\n    if (steps.length === 0) {\r\n      steps.push(JSON.stringify(fullMessage, null, 2));  // fallback\r\n    }\r\n\r\n    return steps;\r\n  };\r\n\r\n  const handleSendMessage = async (message) => {\r\n    setLoading(true);\r\n    setMessages(prev => [...prev, { type: 'user', content: message }]);\r\n\r\n    try {\r\n      const response = await fetch('/chat', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ message }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      setCurrentResponse(data);\r\n\r\nif (data.conversation && Array.isArray(data.conversation)) {\r\n  for (const msg of data.conversation) {\r\n    const displaySteps = extractAgentMessages(msg.agent, msg.message);\r\n\r\n    for (const content of displaySteps) {\r\n      setMessages(prev => [...prev, {\r\n        type: 'agent',\r\n        agent: msg.agent,\r\n        content,\r\n        emoji: msg.emoji,\r\n        messageType: msg.type\r\n      }]);\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n    }\r\n  }\r\n}\r\n else {\r\n        setMessages(prev => [...prev, {\r\n          type: 'agent',\r\n          agent: 'Sarah',\r\n          content: 'Sorry, I encountered an error. Please try again.',\r\n          emoji: 'üë±‚Äç‚ôÄÔ∏è',\r\n          messageType: 'error'\r\n        }]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      setMessages(prev => [...prev, {\r\n        type: 'agent',\r\n        agent: 'Sarah',\r\n        content: 'Sorry, I encountered an error. Please try again.',\r\n        emoji: 'üë±‚Äç‚ôÄÔ∏è',\r\n        messageType: 'error'\r\n      }]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\" sx={{ height: '100vh', display: 'flex', flexDirection: 'column', py: 2 }}>\r\n        <Header />\r\n        <ResponseDisplay response={currentResponse} />\r\n        <ChatInterface\r\n          messages={messages}\r\n          onSendMessage={handleSendMessage}\r\n          loading={loading}\r\n        />\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,EAAEC,WAAW,QAAQ,sBAAsB;AACjE,SAASC,SAAS,EAAEC,WAAW,QAAQ,eAAe;AACtD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,eAAe,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,KAAK,GAAGR,WAAW,CAAC;EACxBS,OAAO,EAAE;IACPC,OAAO,EAAE;MAAEC,IAAI,EAAE;IAAU,CAAC;IAC5BC,SAAS,EAAE;MAAED,IAAI,EAAE;IAAU,CAAC;IAC9BE,UAAU,EAAE;MAAEC,OAAO,EAAE;IAAU;EACnC,CAAC;EACDC,UAAU,EAAE;IACVC,UAAU,EAAE;EACd;AACF,CAAC,CAAC;AAEF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM2B,oBAAoB,GAAGA,CAACC,KAAK,EAAEC,WAAW,KAAK;IACnD,MAAMC,KAAK,GAAG,EAAE;IAEhB,IAAI,OAAOD,WAAW,KAAK,QAAQ,EAAE;MACnCC,KAAK,CAACC,IAAI,CAACF,WAAW,CAAC;IACzB,CAAC,MAAM,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;MAAA,IAAAG,qBAAA,EAAAC,qBAAA,EAAAC,qBAAA;MAC1C,KAAAF,qBAAA,GAAIH,WAAW,CAACM,cAAc,cAAAH,qBAAA,eAA1BA,qBAAA,CAA4BI,OAAO,EAAE;QACvCN,KAAK,CAACC,IAAI,CAACF,WAAW,CAACM,cAAc,CAACC,OAAO,CAAC;MAChD;MACA,KAAAH,qBAAA,GAAIJ,WAAW,CAACQ,QAAQ,cAAAJ,qBAAA,eAApBA,qBAAA,CAAsBG,OAAO,EAAE;QACjCN,KAAK,CAACC,IAAI,CAACF,WAAW,CAACQ,QAAQ,CAACD,OAAO,CAAC;MAC1C;MACA,KAAAF,qBAAA,GAAIL,WAAW,CAACS,qBAAqB,cAAAJ,qBAAA,eAAjCA,qBAAA,CAAmCE,OAAO,EAAE;QAC9CN,KAAK,CAACC,IAAI,CAACF,WAAW,CAACS,qBAAqB,CAACF,OAAO,CAAC;MACvD;IACF;IAEA,IAAIN,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;MACtBT,KAAK,CAACC,IAAI,CAACS,IAAI,CAACC,SAAS,CAACZ,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAE;IACrD;IAEA,OAAOC,KAAK;EACd,CAAC;EAED,MAAMY,iBAAiB,GAAG,MAAON,OAAO,IAAK;IAC3CZ,UAAU,CAAC,IAAI,CAAC;IAChBF,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAET;IAAQ,CAAC,CAAC,CAAC;IAElE,IAAI;MACF,MAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,OAAO,EAAE;QACpCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEV,IAAI,CAACC,SAAS,CAAC;UAAEL;QAAQ,CAAC;MAClC,CAAC,CAAC;MAEF,MAAMe,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC1B,kBAAkB,CAACyB,IAAI,CAAC;MAE9B,IAAIA,IAAI,CAACE,YAAY,IAAIC,KAAK,CAACC,OAAO,CAACJ,IAAI,CAACE,YAAY,CAAC,EAAE;QACzD,KAAK,MAAMG,GAAG,IAAIL,IAAI,CAACE,YAAY,EAAE;UACnC,MAAMI,YAAY,GAAG9B,oBAAoB,CAAC6B,GAAG,CAAC5B,KAAK,EAAE4B,GAAG,CAACpB,OAAO,CAAC;UAEjE,KAAK,MAAMS,OAAO,IAAIY,YAAY,EAAE;YAClCnC,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;cAC5BC,IAAI,EAAE,OAAO;cACbhB,KAAK,EAAE4B,GAAG,CAAC5B,KAAK;cAChBiB,OAAO;cACPa,KAAK,EAAEF,GAAG,CAACE,KAAK;cAChBC,WAAW,EAAEH,GAAG,CAACZ;YACnB,CAAC,CAAC,CAAC;YACH,MAAM,IAAIgB,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;UACxD;QACF;MACF,CAAC,MACK;QACEvC,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;UAC5BC,IAAI,EAAE,OAAO;UACbhB,KAAK,EAAE,OAAO;UACdiB,OAAO,EAAE,kDAAkD;UAC3Da,KAAK,EAAE,OAAO;UACdC,WAAW,EAAE;QACf,CAAC,CAAC,CAAC;MACL;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BzC,WAAW,CAACqB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;QAC5BC,IAAI,EAAE,OAAO;QACbhB,KAAK,EAAE,OAAO;QACdiB,OAAO,EAAE,kDAAkD;QAC3Da,KAAK,EAAE,OAAO;QACdC,WAAW,EAAE;MACf,CAAC,CAAC,CAAC;IACL,CAAC,SAAS;MACRnC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEf,OAAA,CAACR,aAAa;IAACS,KAAK,EAAEA,KAAM;IAAAuD,QAAA,gBAC1BxD,OAAA,CAACL,WAAW;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf5D,OAAA,CAACN,SAAS;MAACmE,QAAQ,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,OAAO,EAAE,MAAM;QAAEC,aAAa,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAV,QAAA,gBAChGxD,OAAA,CAACH,MAAM;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACV5D,OAAA,CAACF,eAAe;QAACuC,QAAQ,EAAErB;MAAgB;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9C5D,OAAA,CAACJ,aAAa;QACZgB,QAAQ,EAAEA,QAAS;QACnBuD,aAAa,EAAElC,iBAAkB;QACjCnB,OAAO,EAAEA;MAAQ;QAAA2C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEpB;AAACjD,EAAA,CAhGQD,GAAG;AAAA0D,EAAA,GAAH1D,GAAG;AAkGZ,eAAeA,GAAG;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}